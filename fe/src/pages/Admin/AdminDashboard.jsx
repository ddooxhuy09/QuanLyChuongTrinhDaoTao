import React, { useEffect, useState } from "react";
import {
  getSummary,
  getTopNganhSinhVien,
  getSinhVienNienKhoa,
  getGiangVienKhoa,
  getMonHocCtdt,
  getUserDebugInfo,
  getTestEndpoint,
  getMockSummary,
  getMockTopNganh,
} from "../../api/services/dashboardService";

const AdminDashboard = () => {
  const user = JSON.parse(localStorage.getItem("user"));
  const [summary, setSummary] = useState(null);
  const [topNganh, setTopNganh] = useState([]);
  const [svNienKhoa, setSvNienKhoa] = useState([]);
  const [gvKhoa, setGvKhoa] = useState([]);
  const [monHocCtdt, setMonHocCtdt] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      setLoading(true);
      setError(null);
      try {
        const token = localStorage.getItem("access_token");
        console.log("Token:", token ? "exists" : "missing");

        // Ki·ªÉm tra user info tr∆∞·ªõc
        try {
          const debugRes = await getUserDebugInfo();
          console.log("User Debug Info:", debugRes.data);
          console.log("User Role:", debugRes.data.data.user.role);
          console.log("User ID:", debugRes.data.data.user.id);

          // Test endpoint kh√¥ng c·∫ßn role
          const testRes = await getTestEndpoint();
          console.log("Test Endpoint:", testRes.data);
        } catch (debugErr) {
          console.error("Debug endpoint error:", debugErr);
          setError(`User debug error: ${debugErr.message}`);
          return;
        }

        const [
          summaryRes,
          topNganhRes,
          svNienKhoaRes,
          gvKhoaRes,
          monHocCtdtRes,
        ] = await Promise.all([
          getSummary(token),
          getTopNganhSinhVien(token),
          getSinhVienNienKhoa(token),
          getGiangVienKhoa(token),
          getMonHocCtdt(token),
        ]);

        console.log("Dashboard responses:", {
          summaryRes,
          topNganhRes,
          svNienKhoaRes,
          gvKhoaRes,
          monHocCtdtRes,
        });

        setSummary(summaryRes.data.data);
        setTopNganh(topNganhRes.data.data || []);
        setSvNienKhoa(svNienKhoaRes.data.data || []);
        setGvKhoa(gvKhoaRes.data.data || []);
        setMonHocCtdt(monHocCtdtRes.data.data || []);
      } catch (err) {
        console.error("Dashboard fetch error:", err);
        setError(`Kh√¥ng th·ªÉ t·∫£i d·ªØ li·ªáu dashboard: ${err.message}`);
      } finally {
        setLoading(false);
      }
    };
    fetchData();
  }, []);

  return (
    <div className="p-6">
      {/* Header */}
      <div className="mb-6">
        <h1 className="text-3xl font-bold text-primary mb-2">
          üõ†Ô∏è Ch√†o m·ª´ng, {user?.name}!
        </h1>
        <p className="text-lg text-base-content">
          ƒê√¢y l√† giao di·ªán Dashboard d√†nh cho ph√≤ng ƒë√†o t·∫°o
        </p>
      </div>
      {loading && (
        <div className="flex justify-center">
          <span className="loading loading-spinner loading-lg text-primary"></span>
        </div>
      )}
      {error && (
        <div className="alert alert-error mb-4">
          <span>{error}</span>
        </div>
      )}
      {!loading && !error && summary && (
        <>
          {/* Dashboard Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-primary">S·ªë sinh vi√™n</h2>
                <p className="text-3xl font-bold">{summary.soSinhVien}</p>
              </div>
            </div>
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-primary">S·ªë gi·∫£ng vi√™n</h2>
                <p className="text-3xl font-bold">{summary.soGiangVien}</p>
              </div>
            </div>
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-primary">S·ªë ng√†nh</h2>
                <p className="text-3xl font-bold">{summary.soNganh}</p>
              </div>
            </div>
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-primary">S·ªë khoa</h2>
                <p className="text-3xl font-bold">{summary.soKhoa}</p>
              </div>
            </div>
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-primary">S·ªë CTƒêT</h2>
                <p className="text-3xl font-bold">
                  {summary.soChuongTrinhDaoTao}
                </p>
              </div>
            </div>
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-primary">S·ªë m√¥n h·ªçc</h2>
                <p className="text-3xl font-bold">{summary.soMonHoc}</p>
              </div>
            </div>
          </div>

          {/* Top 5 ng√†nh c√≥ nhi·ªÅu sinh vi√™n nh·∫•t */}
          <div className="mb-8">
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-xl font-bold mb-2">
                  Top 5 ng√†nh c√≥ nhi·ªÅu sinh vi√™n nh·∫•t
                </h2>
                <div className="overflow-x-auto">
                  <table className="table w-full">
                    <thead>
                      <tr>
                        <th>Ng√†nh</th>
                        <th>S·ªë sinh vi√™n</th>
                      </tr>
                    </thead>
                    <tbody>
                      {topNganh.map((item, idx) => (
                        <tr key={idx}>
                          <td>{item.TenNganh}</td>
                          <td>{item.soSinhVien}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>

          {/* S·ªë l∆∞·ª£ng sinh vi√™n theo t·ª´ng nƒÉm nh·∫≠p h·ªçc */}
          <div className="mb-8">
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-xl font-bold mb-2">
                  S·ªë l∆∞·ª£ng sinh vi√™n theo nƒÉm nh·∫≠p h·ªçc
                </h2>
                <div className="overflow-x-auto">
                  <table className="table w-full">
                    <thead>
                      <tr>
                        <th>NƒÉm nh·∫≠p h·ªçc</th>
                        <th>S·ªë sinh vi√™n</th>
                      </tr>
                    </thead>
                    <tbody>
                      {svNienKhoa.map((item, idx) => (
                        <tr key={idx}>
                          <td>{item.NamNhapHoc}</td>
                          <td>{item.soSinhVien}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>

          {/* S·ªë l∆∞·ª£ng gi·∫£ng vi√™n theo khoa */}
          <div className="mb-8">
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-xl font-bold mb-2">
                  S·ªë l∆∞·ª£ng gi·∫£ng vi√™n theo khoa
                </h2>
                <div className="overflow-x-auto">
                  <table className="table w-full">
                    <thead>
                      <tr>
                        <th>Khoa</th>
                        <th>S·ªë gi·∫£ng vi√™n</th>
                      </tr>
                    </thead>
                    <tbody>
                      {gvKhoa.map((item, idx) => (
                        <tr key={idx}>
                          <td>{item.TenKhoa}</td>
                          <td>{item.soGiangVien}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>

          {/* S·ªë l∆∞·ª£ng m√¥n h·ªçc theo CTƒêT */}
          <div className="mb-8">
            <div className="card bg-base-100 shadow-xl">
              <div className="card-body">
                <h2 className="card-title text-xl font-bold mb-2">
                  S·ªë l∆∞·ª£ng m√¥n h·ªçc theo CTƒêT
                </h2>
                <div className="overflow-x-auto">
                  <table className="table w-full">
                    <thead>
                      <tr>
                        <th>Ch∆∞∆°ng tr√¨nh ƒë√†o t·∫°o</th>
                        <th>S·ªë m√¥n h·ªçc</th>
                      </tr>
                    </thead>
                    <tbody>
                      {monHocCtdt.map((item, idx) => (
                        <tr key={idx}>
                          <td>{item.TenChuongTrinh}</td>
                          <td>{item.soMonHoc}</td>
                        </tr>
                      ))}
                    </tbody>
                  </table>
                </div>
              </div>
            </div>
          </div>
        </>
      )}
    </div>
  );
};

export default AdminDashboard;
